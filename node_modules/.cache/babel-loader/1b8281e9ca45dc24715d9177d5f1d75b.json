{"ast":null,"code":"import _defineProperty from \"/home/eido/Projects/someone_web_material/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { LIST_COUNTRIES, FORM_ERROR } from \"../actions/actionTypes\";\nconst initialState = {\n  countries: []\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case LIST_COUNTRIES:\n      return _objectSpread({}, state, {\n        countries: action.content.countries\n      });\n\n    case FORM_ERROR:\n      return _objectSpread({}, state, {\n        error: action.content.error\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/eido/Projects/someone_web_material/src/services/redux/reducers/forms.js"],"names":["LIST_COUNTRIES","FORM_ERROR","initialState","countries","state","action","type","content","error"],"mappings":";;;;;;AAAA,SAASA,cAAT,EAAwBC,UAAxB,QAA0C,wBAA1C;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAC;AADS,CAArB;AAIA,eAAe,UAASC,KAAK,GAAGF,YAAjB,EAA+BG,MAA/B,EAAuC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,cAAL;AACE,+BAAYI,KAAZ;AAAmBD,QAAAA,SAAS,EAAEE,MAAM,CAACE,OAAP,CAAeJ;AAA7C;;AACF,SAAKF,UAAL;AACE,+BAAWG,KAAX;AAAkBI,QAAAA,KAAK,EAACH,MAAM,CAACE,OAAP,CAAeC;AAAvC;;AACF;AACE,aAAOJ,KAAP;AANJ;AAQD","sourcesContent":["import { LIST_COUNTRIES,FORM_ERROR } from \"../actions/actionTypes\";\n\nconst initialState = {\n  countries:[]\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case LIST_COUNTRIES:\n      return { ...state, countries: action.content.countries};\n    case FORM_ERROR:\n      return {...state, error:action.content.error}\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}